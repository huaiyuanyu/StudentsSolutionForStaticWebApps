@page "/"
@inject HttpClient Http
@inject NavigationManager NavManager

<QuickGrid Items="@students" Pagination="@pagination">
    <PropertyColumn Property="@(_ => _.StudentId)" Title="ID" Sortable="true" />
    <TemplateColumn Title="Name" SortBy="@sortByName">
      <div class="flex items-center">
        <nobr>
          @context.FirstName @context.LastName
        </nobr>
      </div>
    </TemplateColumn>
    <PropertyColumn Property="@(_ => _.School)" Sortable="true" />
</QuickGrid>

<Paginator State="@pagination" />

@code {

    private IQueryable<Student>? students;
    private PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    GridSort<Student> sortByName = GridSort<Student>
      .ByAscending(_ => _.FirstName).ThenAscending(_ => _.LastName);

    protected override async Task OnInitializedAsync()
    {
      var studentList = await Http.GetFromJsonAsync<List<Student>>($"{Constants.BASE_URL}api/students");

      students = studentList!.AsQueryable();
    }
}